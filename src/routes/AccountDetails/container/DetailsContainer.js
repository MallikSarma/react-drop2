import { connect } from "react-redux";
import {
    navigateToDifferentPages,
    updateRedrawData,
    toggleRedrawLoan,
    updatePlacementData,
    togglePlacementFD,
    getAsyncRewardDetails,
    upliftManageFD,
    updatePDFpages,
    handlePDFUrl,
    resetAccountDetails,
    togglePdfScale,
    menuButtonClick,
    leftMenuButtonClick,
    getAsyncDashboardData,
    readMessage,
    navigatePage,
    setRequestHardCopyData,
    toggleRequestHardCopyPopup,
    asyncCheckRequestHardCopy,
    toggleViewStatementPdf,
    setViewStatementData,
    togglePopupMenu,
    toggleSearchChat,
    asyncCheckMakePlacement,
    setUpliftManageData,
    asyncCheckUpliftManage,
    confirmDetails,
    searchFilterActions,
    asyncRequestTAC,
    asyncCheckOTP,
    doneGoBack,
    editClick,
    asyncCheckRedraw,
    asyncConfirmRedraw,
    asyncConfirmMakePlacement,
    asyncConfirmUpliftManage,
    toggleQuickPayTransferModal,
    getAsyncQuickPayDetails,
    getInputData,
    asyncSendQuickPay,
    asyncConfirmQuickPay,
    getAsyncCardPaymentInfo,
    getAsyncLoanTransfer,
    setUserProfile,
    getAsyncAccTransaction,
    getAsyncRewardTypes,
    getAsyncMoreAccTransactions
  } from "../modules/details";
import Details from "../components/Details";
import { updateIntl } from "react-intl-redux";

function updateMessages(locale) {
  return (dispatch, state)=> {
    dispatch(updateIntl({
      locale,
      messages: state().messages[locale]
    }));
  };
}

const mapStateToProps = (state) => ({
    locale: state.intl.locale,
    messages: state.intl.messages,
    accountDetails: state.details.accountDetails,
    showSideBar: state.details.showSideBar,
    showLeftSideBar: state.details.showLeftSideBar,
    tableData: state.details.tableData || {},
    pdfScale: state.details.pdfScale || 1,
    receiptUrl: state.details.receiptUrl,
    manageFD: state.details.manageFD || {},
    pdfPages: state.details.pdfPages,
    refreshRewards: state.details.refreshRewards || "",
    showMakePlacement:state.details.showMakePlacement,
    placementData: state.details.placementData || {},
    makePlacement: state.details.makePlacement,
    redrawData: state.details.redrawData || {},
    showRedraw: state.details.showRedraw,
    currentPage: state.details.currentPage,
    requestHardCopy:state.details.requestHardCopy || {},
    showMakeRequestHardCopy:state.details.showMakeRequestHardCopy,
    requestHardCopySuccess:state.details.requestHardCopySuccess,
    errorName: state.details.errorName || "",
    notification: state.notification,
    viewStatementPdf:state.details.viewStatementPdf,
    agreeConditions: !!state.details.placementData.agreeConditions,
    showSearchModal: state.details.showSearchModal,
    upliftManageFDdata:state.details.upliftManageFDdata || {},
    popupOpen: state.details.popupOpen,
    webchat: state.details.webchat,
    searchText: state.details.searchText,
    certificateSummary:state.details.certificateSummary,
    confirm:state.details.confirm,
    tacRequest:state.details.tacRequest,
    redrawSummary:state.details.redrawSummary,
    currentIndex: state.details.currentIndex,
    showQuickPay: state.details.showQuickPay,
    quickPayDetails: state.details.quickPayDetails || {},
    tempToSection: state.details.tempToSection,
    quickPaySummary: state.details.quickPaySummary,
    userProfile: state.dashboard.userProfile || [],
    dashboardDetails: state.dashboard.dashboardDetails || {},
    currentAccount:state.dashboard.currentAccount || {},
    accountTransactions:state.details.accountTransactions || {},
    rewards:state.dashboard.dashboardDetails.accountsInfo.rewards || [],
    requestArray:state.details.requestArray || []
});

const mapDispatchToProps = {
  updateMessages,
  menuButtonClick,
  getAsyncDashboardData,
  navigatePage,
  readMessage,
  leftMenuButtonClick,
  togglePdfScale,
  handlePDFUrl,
  resetAccountDetails,
  togglePlacementFD,
  upliftManageFD,
  updatePDFpages,
  updatePlacementData,
  getAsyncRewardDetails,
  updateRedrawData,
  toggleRedrawLoan,
  navigateToDifferentPages,
  setRequestHardCopyData,
  toggleRequestHardCopyPopup,
  asyncCheckRequestHardCopy,
  toggleViewStatementPdf,
  setViewStatementData,
  asyncCheckMakePlacement,
  togglePopupMenu,
  setUpliftManageData,
  asyncCheckUpliftManage,
  toggleSearchChat,
  confirmDetails,
  asyncRequestTAC,
  searchFilterActions,
  asyncCheckOTP,
  doneGoBack,
  editClick,
  asyncCheckRedraw,
  asyncConfirmRedraw,
  asyncConfirmMakePlacement,
  getAsyncQuickPayDetails,
  asyncConfirmUpliftManage,
  toggleQuickPayTransferModal,
  getInputData,
  asyncSendQuickPay,
  asyncConfirmQuickPay,
  getAsyncCardPaymentInfo,
  getAsyncLoanTransfer,
  setUserProfile,
  getAsyncAccTransaction,
  getAsyncRewardTypes,
  getAsyncMoreAccTransactions
};

export default connect(mapStateToProps, mapDispatchToProps)(Details);