import { connect } from "react-redux";
import Transactions from "../components/Transactions";
import {updateIntl} from "react-intl-redux";
import {
    getAsyncDashboardData,
    asyncReadMessage,
    menuButtonClick,
    leftMenuButtonClick,
    navigateToDifferentPages,
    toggleFavoritePopup,
    resetStore,
    updatePaymentList,
    getAsyncPayeeList,
    togglePaymentModal,
    getAsyncPayDetails,
    updateAccountSelection,
    getInputData,
    updatePayeeSelection,
    asyncToggleJompayModal,
    toggleFavoriteModal,
    getFavoriteInputData,
    updateFavoriteList,
    triggerNotification,
    resetError,
    confirmDetails,
    doneGoBack,
    editClick,
    navigatePage,
    asyncToggleFavoriteModal,
    asyncSendPay,
    asyncSendTransfer,
    asyncSendPayReload,
    asyncConfirmPayTransfer,
    toggleJompayTerm,
    updateTransferSelection,
    togglePdfScale,
    handlePDFUrl,
    updatePDFpages,
    asyncCheckOTP,
    asyncSendMultiplePay,
    toggleFavoriteSummary,
    addMultipleRecipient,
    sendAsyncMultiTransaction
} from "../modules/transactions";
function updateMessages(locale) {
    return (dispatch, state)=> {
        dispatch(updateIntl({
            locale,
            messages: state().messages[locale]
        }));
    };
}

const mapStateToProps = (state) => ({
    locale: state.intl.locale,
    messages: state.intl.messages,
    dashboardDetails: state.transactions.dashboardDetails || {},
    showSideBar: state.transactions.showSideBar,
    showLeftSideBar: state.transactions.showLeftSideBar,
    popupMenu: state.transactions.popupMenu || {},
    currentPage: state.transactions.currentPage,
    showSummary : state.transactions.showSummary,
    showFavoriteSummary : state.transactions.showFavoriteSummary,
    paymentSummaryData: state.transactions.paymentSummaryData || {},
    payDetailsData: state.transactions.payDetailsData || {},
    favoritePopup: state.transactions.favoritePopup,
    paymentModalOpen: state.transactions.paymentModalOpen,
    payeeList: state.transactions.payeeList || [],
    userPayeeInput: state.transactions.userPayeeInput || "",
    inputData: state.transactions.inputData,
    notification: state.notification,
    errorName: state.transactions.errorName || "",
    fromAccount: state.transactions.fromAccount,
    payeeInfo: state.transactions.payeeInfo || {"name" : ""},
    payeeId: state.transactions.payeeId,
    tempToSection: state.transactions.tempToSection || {},
    favoriteInfo : state.transactions.favoriteInfo || {},
    favoriteModalOpen: state.transactions.favoriteModalOpen,
    confirm:state.transactions.confirm || false,
    jompayTerms: state.transactions.jompayTerms,
    receiptUrl: state.transactions.receiptUrl,
    pdfScale: state.transactions.pdfScale || 1,
    pdfPages: state.transactions.pdfPages,
    tacRequest: state.transactions.tacRequest || false,
    selectedRecipientList : state.transactions.selectedRecipientList || [],
    showMultipleSticky: state.transactions.showMultipleSticky || false
});

const mapDispatchToProps = {
    updateMessages,
    getAsyncDashboardData,
    menuButtonClick,
    leftMenuButtonClick,
    asyncReadMessage,
    navigateToDifferentPages,
    toggleFavoritePopup,
    resetStore,
    updatePaymentList,
    getAsyncPayeeList,
    togglePaymentModal,
    getAsyncPayDetails,
    updateAccountSelection,
    updatePayeeSelection,
    getInputData,
    asyncToggleJompayModal,
    toggleFavoriteModal,
    getFavoriteInputData,
    updateFavoriteList,
    triggerNotification,
    resetError,
    confirmDetails,
    doneGoBack,
    editClick,
    navigatePage,
    asyncToggleFavoriteModal,
    asyncSendPay,
    asyncSendTransfer,
    asyncSendPayReload,
    asyncConfirmPayTransfer,
    toggleJompayTerm,
    updateTransferSelection,
    togglePdfScale,
    handlePDFUrl,
    updatePDFpages,
    asyncCheckOTP,
    asyncSendMultiplePay,
    toggleFavoriteSummary,
    addMultipleRecipient,
    sendAsyncMultiTransaction
};
export default connect(mapStateToProps, mapDispatchToProps)(Transactions);
